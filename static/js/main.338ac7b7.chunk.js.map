{"version":3,"sources":["App.js","index.js"],"names":["apiInfo","App","useState","value","setValue","weather","setWeather","weather1","setWeather1","test","setTest","fetchInitial","a","query","fetch","res","json","main","temp","useEffect","className","param","day","getDay","datee","getDate","month","getMonth","year","getFullYear","date","Date","onSubmit","e","preventDefault","then","result","name","console","log","err","type","placeholder","onChange","target","Math","round","feels_like","temp_max","humidity","src","icon","alt","description","wind","deg","gust","speed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.338ac7b7.chunk.js","sourcesContent":["import React, { useEffect, useState} from 'react';\n\n\n\nconst apiInfo = {\n  key:\"ae46f0004b35e070d24d399980f942e1\",\n  base:\"https://api.openweathermap.org/data/2.5/\"\n}\n\nconst ico = \"http://openweathermap.org/img/w/\" \nconst typee = \".png\";\n\n\nfunction App() {\n\n  const[value, setValue] =      useState('meknes');\n  const [weather, setWeather] = useState({});\n  const [weather1, setWeather1] = useState('');\n  const [test, setTest] = useState(false);\n\n  const date = (param)=>{\n    let months= ['January','February','March','April','May','June',\n    'July','August','September','October','November','December'];\n    let days = ['Sunday','Monday','Tusday','Wednesday','Thursday',\n    'Friday','Saturday'];\n\n    let day = days[param.getDay()];\n    let datee = param.getDate();\n    let month = months[param.getMonth()];\n    let year = param.getFullYear();\n\n    return`${day}, ${datee} ${month} ${year}`;\n  }\n\n  const fetchInitial = async()=>{\n      const query = apiInfo.base + 'weather?q=' + value\n     + '&units=metric&APPID=' + apiInfo.key;\n\n        const res = await fetch(query);\n       const weather = await res.json();\n       \n       if((typeof weather.main.temp !== 'undefined')){\n         setWeather1(weather.main.temp)\n       }\n      setWeather1('');\n}\n\n  useEffect(()=>{\n      fetchInitial();\n  }, [])\n\n  const handleChange = (e)=>{\n    setValue(e.target.value)\n  }\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n    const query = apiInfo.base + 'weather?q=' + value\n     + '&units=metric&APPID=' + apiInfo.key;\n\n     try{\n      fetch(query).then(res => res.json())\n      .then(result =>{\n\n        if(result.name !== 'undefined' ){\n        setTest(true);\n        setWeather(result);\n        setWeather1(result.main.temp) ;\n        setValue('');\n        console.log(result);\n        \n        }\n      })\n     }catch(err){\n      console.log(err);\n     }\n   \n  }\n\n  const handleBackground = ()=>{\n    {\n   \n    if(weather1 < 14){\n        return 'cold';\n    }\n    else{\n      return 'hot';\n    }\n  }\n  }\n  return(\n    \n    <section className={`container dis-${handleBackground()}`}>\n    <div className=\"date\">{date(new Date())}</div>\n      <div className=\"search\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"search\"\n         placeholder=\"City or Country\"\n        onChange={handleChange}\n         /></form>\n      </div>\n      {test &&\n      <>\n      <div className=\"name\"><h1> {weather.name}</h1></div>\n     \n     <div className=\"degree\">\n {(typeof weather.main !== 'undefined') && \n              <>\n      \n      <span className=\"temp feels\">\n              <span className=\"sp1\">Feels like</span>\n              <span className=\"sp2\">    {Math.round(weather.main.feels_like)}째C</span>\n      </span>\n      <span className=\"temp tem\">\n           \n              \n              <span className=\"sp2\">  {Math.round(weather.main.temp)}째C</span>\n           \n      </span>\n      <span className=\"temp temMax\">\n              <span className=\"sp1\">Max Temp</span>\n              <span className=\"sp2\">    {Math.round(weather.main.temp_max)}째C</span>\n      </span>\n         </>\n            }\n      </div>\n\n       <div className=\"state\">\n        {((typeof weather.weather !== 'undefined') &&\n         (typeof weather.main !== 'undefined')) && <>\n        \n       \n                  \n        <span className=\"sp3 clea\"> \n        <span className=\"sp31\">Humidity</span>\n        <span className=\"sp32\">{weather.main.humidity}</span>\n        </span>\n        <span className=\"sp3 sta\">\n        <span className=\"sp31\">{weather.weather[0].main}</span>\n        <span className=\"sp32 cl\" >\n        <img className=\"icon\" src={ico + weather.weather[0].icon + typee} alt=\"\" />\n        </span>\n        </span>\n        <span className=\"sp3 cleaSky\">\n        \n        <span className=\"sp31\">{weather.weather[0].description}</span>\n        \n        </span>\n        </>}\n      </div>\n      <div className=\"state1\">\n             {(typeof weather.wind !== 'undefined') && <>\n       <span className=\"sp3 \">\n        <span className=\"sp31\">Wind deg</span>\n        <span className=\"sp32\">{weather.wind.deg}째</span>\n        </span>\n        <span className=\"sp3 \">\n        <span className=\"sp31\">Wind gust</span>\n        <span className=\"sp32\">{weather.wind.gust}</span>\n        </span>\n        <span className=\"sp3 \">\n        <span className=\"sp31\">Wind speed</span>\n        <span className=\"sp32 spee\">{weather.wind.speed} Km/h</span>\n        </span>\n              </>}\n      </div>\n      </>\n      }\n      \n      \n   </section>\n\n);\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}